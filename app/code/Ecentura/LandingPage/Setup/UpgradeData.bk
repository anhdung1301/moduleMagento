<?php

namespace Ecentura\LandingPage\Setup;

use Magento\Framework\Setup\UpgradeDataInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\Setup\ModuleDataSetupInterface;

/**
 * @codeCoverageIgnore
 */
class UpgradeData implements UpgradeDataInterface
{
    /**
     * @var \Magento\Cms\Model\PageFactory
     */
    protected $_pageFactory;
    private $blockFactory;

    /**
     * Construct
     *
     * @param \Magento\Cms\Model\PageFactory $pageFactory
     */
    public function __construct(
        \Magento\Cms\Model\PageFactory $pageFactory,
        \Magento\Cms\Model\BlockFactory $blockFactory

    ) {
        $this->_pageFactory = $pageFactory;
        $this->blockFactory = $blockFactory;

    }
    /**
     * @param ModuleDataSetupInterface $setup
     * @param ModuleContextInterface $context
     */
    public function upgrade(ModuleDataSetupInterface $setup, ModuleContextInterface $context)
    {
        $setup->startSetup();
        if (version_compare($context->getVersion(), '0.0.5') < 0) {
            $testBlock = [
                'title' => 'Test block title',
                'identifier' => 'test-block11',
                'stores' => [0],
                'Content' => '<p>{{block class="Ecentura\LandingPage\Block\Landing\Custom"  name ="landing-page" template="Ecentura_LandingPage::custom.phtml"}} </p>',
         'is_active' => 1,
         ];
        $this->blockFactory->create()->setData($testBlock)->save();
        $setup->endSetup();
            }
    }
}
